from funcsforspo_l.fpython.functions_for_py import *
import streamlit as st
from src.app.app import *

exames_disponiveis = ["ACUPUNTURA", "ALERGIA E IMUNOLOGIA", "ALERGOLOGIA", "ALERGOLOGIA INFANTIL", "ANALISE GENETICA MOLECULAR", "ANALISES CLINICAS", "ANATOMIA PATOLOGICA", "ANESTESIOLOGIA", "ANGIO-RESSONANCIA", "ANGIOLOGIA E CIRURGIA VASCULAR", "ANGIOTOMOGRAFIA", "AUDIOMETRIA", "BERA (TESTE DA ORELHINHA)", "BETATERAPIA", "BIOIMPEDANCIOMETRIA", "BIOPSIAS", "BRONCOSCOPIA", "BUCO MAXILO", "CALORIMETRIA", "CARDIOLOGIA", "CARDIOLOGIA INFANTIL", "CINTILOGRAFIA", "CIRURGIA APARELHO DIGESTIVO", "CIRURGIA BUCO MAXILO FACIAL", "CIRURGIA CABECA E PESCOCO", "CIRURGIA DA COLUNA", "CIRURGIA DA MAO", "CIRURGIA GERAL", "CIRURGIA ONCOLOGICA", "CIRURGIA PLASTICA", "CIRURGIA VASCULAR", "CITOLOGIA", "CLINICA MEDICA GERAL", "COLONOSCOPIA", "COLPOSCOPIA", "DENSITOMETRIA OSSEA", "DERMATOLOGIA", "DERMATOLOGIA PEDIATRICA", "DOPPLER GERAL", "ECOCARDIOGRAFIA", "ECOCARDIOGRAMA", "ECOCARDIOGRAMA COM DOPPLER FARMACOLOGICO", "ECOCARDIOGRAMA COM DOPPLER TRANSTORACICO", "ECODOPPLER CARODITAS E VERTEBRAIS", "ECODOPPLERCARDIOGRAMA", "ECOGRAFIA", "ELECTRENCEFALOGRAFIA E NEUROFISIOLOGIA", "ELETROCARDIOGRAFIA", "ELETROCARDIOGRAMA", "ELETROENCEFALOGRAFIA", "ELETRONEUROMIOGRAFIA", "ENDOCRINOLOGIA", "ENDOCRINOLOGIA PEDIATRICA", "ENDOSCOPIA", "ESTUDO URODINAMICO", "EXAMES CARDIOLOGICOS", "EXAMES DERMATOLOGISTA", "EXAMES GASTROINTESTINAIS", "EXAMES GINECOLOGICOS", "EXAMES OFTALMOLOGICOS", "EXAMES OTONEUROLOGICO COMPLETO", "EXAMES OTORRINOLARINGOLOGICOS", "EXAMES TISIOPNEUMOLOGIA", "EXAMES UROLOGICOS", "FISIATRIA", "FISIOTERAPIA", "FISIOTERAPIA NEUROLOGICA", "FISIOTERAPIA ORTOPEDICA", "FISIOTERAPIA POR BIOFDEEBACK", "FISIOTERAPIA RESPIRATORIA", "FISIOTERAPIA UROGINECOLOGICA", "FONOAUDIOLOGIA", "FONOAUDIOLOGIA INFANTIL", "FOTOTERAPIA", "GASTROENTEROLOGIA", "GASTROENTEROLOGIA PEDIATRICA", "GENETICISTA", "GERIATRIA", "GINECOLOGIA", "GINECOLOGIA PEDIATRICA", "HEMATOLOGIA", "HEMATOLOGIA PEDIATRICA", "HEMODIALISE", "HEPATOLOGIA", "HEPATOLOGIA PEDIATRICA", "HOLTER", "HOMEOPATIA", "HOMEOPATIA INFANTIL", "IMUNOLOGIA INFANTIL", "INFECTOLOGIA", "INFECTOLOGIA PEDIATRICA", "LARINGOSCOPIA", "LITOTRIPSIA", "MAMOGRAFIA", "MAPA", "MASTOLOGIA", "MATERNIDADE", "MEDICINA DO TRABALHO", "MEDICINA FISICA E REABILITACAO", "MEDICINA HIPERBARICA", "NASOFIBROLARINGOSCOPIA", "NEFROLOGIA", "NEFROLOGIA PEDIATRICA", "NEUROCIRURGIA", "NEUROLOGIA CLINICA", "NEUROLOGIA PEDIATRICA", "NEUROPSICOLOGICA", "NUTRICIONISTA", "NUTRICIONISTA INFANTIL", "NUTROLOGIA", "OBSTETRICIA", "OFTALMOLOGIA", "OFTALMOLOGIA PEDIATRICA", "ONCOLOGIA PEDIATRICA", "ORTOPEDIA E TRAUMATOLOGIA", "ORTOPEDIA PEDIATRICA", "OTORRINOLARINGOLOGIA", "OTORRINOLARINGOLOGIA PEDIATRICA", "PATOLOGIA CLINICA", "PEDIATRIA", "PET CT", "PNEUMOLOGIA", "PNEUMOLOGIA INFANTIL", "POLISSONOGRAFIA", "PROCESSAMENTO AUDITIVO CENTRAL", "PROCTOLOGIA", "PRONTO SOCORRO ADULTO", "PRONTO SOCORRO GINECOLOGIA", "PRONTO SOCORRO OBSTETRICIA", "PRONTO SOCORRO OFTALMOLOGIA", "PRONTO SOCORRO ORTOPEDICO", "PRONTO SOCORRO OTORRINO", "PRONTO SOCORRO PEDIATRICO", "PRONTO SOCORRO PSIQUIATRICO", "PROVA DE FUNCAO PULMONAR", "PSICOLOGIA", "PSICOLOGIA INFANTIL", "PSICOTERAPIA", "PSIQUIATRIA", "PSIQUIATRIA INFANTIL", "QUIMIOTERAPIA", "RADIODIAGNOSTICO", "RESSONANCIA MAGNETICA", "REUMATOLOGIA", "REUMATOLOGIA PEDIATRICA", "TERAPIA OCUPACIONAL", "TESTE ERGOMETRICO", "TOMOGRAFIA", "ULTRASSONOGRAFIA", "ULTRASSONOGRAFIA COM DOPPLER", "ULTRASSONOGRAFIA MORFOLOGICA", "UROFLUXOMETRIA", "UROLOGIA", "UROLOGIA PEDIATRICA", "VULVOSCOPIA"]


if __name__ == '__main__':
    df = None
    st.title('Captura de Locais de Exames')
    cpf = st.text_input('CPF')
    especialidade = st.selectbox('Especialidade', exames_disponiveis)
    
    if cpf and especialidade:
        if st.button('Executar'):
            df = None
            with st.expander('Resultados'):
                try:
                    app = RobotClass('24868971867', especialidade)
                    app.acessa()
                    app.preenche_especialidade()
                    df = app.extrai_infos()
                except Exception as e:
                    st.exception(e)
            st.balloons()
            df = pd.DataFrame(df)
            st.dataframe(df)
            
    else:
        st.warning('Envie o CPF e a especialidade, sem pontuações')